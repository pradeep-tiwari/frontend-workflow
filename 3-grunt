+------------------------------------------------------------------------------------
Grunt
+------------------------------------------------------------------------------------

--> Grunt is a task runner.
--> It helps automate jobs like watching, linting, minification, compiling of
    LESS & SASS files, testing, documentation, and deployment.
--> It is used as a Node module, so requires Node.js.    


+------------------------------------------------------------------------------------
Installation
+------------------------------------------------------------------------------------

--> Issue following command:

    npm install -g grunt-cli
    
    

+------------------------------------------------------------------------------------
In Action
+------------------------------------------------------------------------------------
    
--> In the project root, issue this command that creates a package.json file to hold
    all the development dependencies:
    
    npm init
    
--> Now to install required plug-ins as development dependencies, issue one or more
    of these commands:
    
    npm install --save-dev grunt
    npm install --save-dev load-grunt-tasks
    npm install --save-dev grunt-contrib-connect
    npm install --save-dev grunt-contrib-jshint
    npm install --save-dev grunt-contrib-less
    npm install --save-dev grunt-contrib-watch

--> May be you need AngularJS framework. Why not install Angular using Bower:
    
    bower init
    bower install -SF angular
    
--> Now is the time to configure Grunt tasks. Create a file named Gruntfile.js in
    project root as a sibling of package.json with following contents:
    
    
    'use strict';
    // Wrapper function
    module.exports = function(grunt) {
        
        // Project and task configuration
        grunt.initConfig({
            pkg: grunt.file.readJSON('package.json'),
            
            // Configure the 'connect' task from 'grunt-contrib-connect'
            connect: {
                // Task options, overrides built-in defaults
                options: {
                    port: 9000,
                    open: true,
                    livereload: 35729,
                    hostname: 'localhost'
                },
                // Arbitrarily named target
                development: {
                    // Target options, overrides task options
                    options: {
                        middleware: function(connect) {
                            return [
                                connect.static('app');
                            ];
                        }
                    }
                }
            },
            
            // Configure the 'less' task from 'grunt-contrib-less'
            less: {
                development: {
                    files: {
                        'app/main.css': 'app/main.less'
                    }
                }
            },
            
            // Configure the 'jshint' task from 'grunt-contrib-jshint'
            jshint: {
                options: {
                    '.jshintrc'
                },
                all: [
                    'Gruntfile.js',
                    'app/*.js'
                ]
            },
            
            // Configure the 'watch' task from 'grunt-contrib-watch'
            watch: {
                options: {
                    livereload: '<%= connect.options.livereload %>'
                },
                js: {
                    files: ['app/*.js'],
                    tasks: ['jshint']
                },
                styles: {
                    files: ['app/*.less'],
                    tasks: ['less']
                },
                html: {
                    files: ['app/*.html']
                }
            }
        });
        
        // Load all pug-in tasks automatically
        require('load-grunt-tasks')(task);
        
        // Default task
        grunt.registerTask('default', ['connect:development', 'watch']);
        
        // Custom task
        grunt.registerTask('myTask', 'My custom task', function(one, two) {
            // Force task to run in async mode and save handle for completion callback
            var done = this.async();
            
            setTimeout(function() {
                // Access task name and arguments
                grunt.log.writeln(this.name, one, two);
                
                // Fail if properties don't exist
                grunt.config.requires('connnect.otions.livereload');
                
                // Access configuration properties
                grunt.log.writeln('The livereload port is: ' + grunt.config('connect.options.livereload'));
                
                // Succeed asynchronously
                done();
                
                // Run other tasks
                grunt.task.run('default');
            }.bind(this), 1000);
        });
        
    };
    